
`timescale 1ns / 1ps

module LEDdecoder(char, LED);
	
	input wire [3:0] char [0:15];
	output reg [6:0] LED;
	
	assign char[0] = 4'b0000;
	assign char[1] = 4'b0001;
	assign char[2] = 4'b0010;
	assign char[3] = 4'b0011;
	assign char[4] = 4'b0100;
	assign char[5] = 4'b0101;
	assign char[6] = 4'b0110;
	assign char[7] = 4'b0111;
	assign char[8] = 4'b1000;
	assign char[9] = 4'b1001;
	assign char[10] = 4'b1010;
	assign char[11] = 4'b1011;
	assign char[12] = 4'b1100;
	assign char[13] = 4'b1101;
	assign char[14] = 4'b1110;
	assign char[15] = 4'b1111;
	
	always @(*)
	begin
		case(char)
			char[0]: LED = 7'b0000001; //0
			char[1]: LED = 7'b1001111; //1
			char[2]: LED = 7'b0010010; //2
			char[3]: LED = 7'b0000110; //3
			char[4]: LED = 7'b1001100; //4
			char[5]: LED = 7'b0100100; //5
			char[6]: LED = 7'b0100000; //6
			char[7]: LED = 7'b0001111; //7
			char[8]: LED = 7'b0000000; //8
			char[9]: LED = 7'b0000100; //9
			char[10]: LED = 7'b0001000; //A
			char[11]: LED = 7'b1100000; //b
			char[12]: LED = 7'b0110001; //C
			char[13]: LED = 7'b1000010; //d
			char[14]: LED = 7'b0110000; //E
			char[15]: LED = 7'b0111000; //F
			default: LED = 7'b0000001; //0
		endcase
	end
endmodule